// Generated by Haxe 4.1.1
(function ($hx_exports, $global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var apis_LedsApi = function() {
	this.client = new utils_Client();
};
apis_LedsApi.__name__ = true;
apis_LedsApi.prototype = {
	write: function(led,value) {
		var args = "--led=" + Std.string(led) + " --value=" + Std.string(value);
		return this.client.wasmExec("leds","write",args);
	}
};
var utils_Client = function() {
	var jsArch = js_node_Os.arch();
	this.arch = jsArch;
	if(jsArch == "x64") {
		this.arch = "x86_64";
	} else if(jsArch == "arm64") {
		this.arch = "aarch64";
	}
};
utils_Client.__name__ = true;
utils_Client.prototype = {
	wasmExec: function($module,action,moduleArgs,dirs,envs) {
		var clientScriptPath = __dirname;
		var iwasmPath = clientScriptPath + "/bin/iwasm_" + this.arch;
		var modulePath = clientScriptPath + "/modules/" + $module + ".wasm";
		var program = "" + iwasmPath + " --dir=/ " + modulePath + " " + action + " " + moduleArgs;
		var result = null;
		try {
			var resultO = js_node_ChildProcess.execSync(program);
			result = resultO.toString();
		} catch( _g ) {
			var e = haxe_Exception.caught(_g);
			result = e.toString();
		}
		return result;
	}
};
var js_node_Os = require("os");
var BalenaHal = $hx_exports["BalenaHal"] = function() {
};
BalenaHal.__name__ = true;
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_node_ChildProcess = require("child_process");
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
BalenaHal.leds = new apis_LedsApi();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
